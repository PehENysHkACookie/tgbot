# bonus_system.py
import random
from datetime import datetime

class BonusSystem:
    def __init__(self, database):
        self.db = database

    def get_daily_bonus_options(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤"""
        bonuses = [
            {
                "type": "rare_chance",
                "name": " –£–¥–∞—á–∞ –Ω–∞ –∫–∞—Ä—Ç—ã üçÄ",
                "description": "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è —Ä–µ–¥–∫–∏—Ö –∫–∞—Ä—Ç –Ω–∞ 10% –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å",
                "emoji": "üçÄ"
            },
            {
                "type": "extra_drop", 
                "name": " –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ ‚ö°",
                "description": "–î–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∫–∞—Ä—Ç—É —Å–µ–≥–æ–¥–Ω—è",
                "emoji": "‚ö°"
            }
        ]
        return bonuses

    def can_claim_daily_bonus(self, user_id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞"""
        return self.db.can_claim_daily_bonus(user_id)

    def claim_daily_bonus(self, user_id, bonus_type):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞"""
        if not self.can_claim_daily_bonus(user_id):
            return False
        self.db.claim_daily_bonus(user_id, bonus_type)
        return True

    def get_bonus_status(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user = self.db.get_user(user_id)
        if not user:
            return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
        bonus_chance = user[5] # bonus_card_chance
        extra_drops = user[6] # bonus_extra_drops
        status = "üéÅ **–ê–∫—Ç–∏–≤–Ω—ã–µ –±–æ–Ω—É—Å—ã:**\n"
        if bonus_chance > 0:
            status += f"üçÄ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —à–∞–Ω—Å —Ä–µ–¥–∫–∏—Ö –∫–∞—Ä—Ç: +{bonus_chance}%\n"
        if extra_drops > 0:
            status += f"‚ö° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç: {extra_drops}\n"
        if bonus_chance == 0 and extra_drops == 0:
            status += "‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤\n"
        status += f"\nüóì –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å: {'‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' if self.can_claim_daily_bonus(user_id) else '‚ùå –£–∂–µ –ø–æ–ª—É—á–µ–Ω'}"
        return status

    def use_extra_drop(self, user_id):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏"""
        user = self.db.get_user(user_id)
        if not user or user[6] <= 0: # extra_drops
            return False
        self.db.cursor.execute('''
            UPDATE users SET bonus_extra_drops = bonus_extra_drops - 1 
            WHERE user_id = ?
        ''', (user_id,))
        self.db.conn.commit()
        return True

    def reset_daily_bonuses(self):
        """–°–±—Ä–æ—Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—É—é –Ω–æ—á—å)"""
        self.db.cursor.execute('''
            UPDATE users SET 
                bonus_card_chance = 0.0,
                bonus_extra_drops = 0
            WHERE daily_bonus_claimed != DATE('now')
        ''')
        self.db.conn.commit()

    # def get_weekly_bonus(self, user_id):
    #     """–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –±–æ–Ω—É—Å –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤"""
    #     # –ü–æ–¥—Å—á–µ—Ç –∫–∞—Ä—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
    #     self.db.cursor.execute('''
    #         SELECT COUNT(*) FROM user_cards 
    #         WHERE user_id = ? AND obtained_date >= DATE('now', '-7 days')
    #     ''', (user_id,))
    #     weekly_cards = self.db.cursor.fetchone()[0]
    #     if weekly_cards >= 10: # –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–æ 10+ –∫–∞—Ä—Ç –∑–∞ –Ω–µ–¥–µ–ª—é
    #         return {
    #             "eligible": True,
    #             "reward": "legendary_chance",
    #             "description": "üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é 4‚òÖ+ –∫–∞—Ä—Ç—É –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!"
    #         }
    #     return {"eligible": False}