# card_system.py
import random
from config import RARITY_CHANCES, RARITY_NAMES, STAR_EMOJI
class CardSystem:
    def __init__(self, database):
        self.db = database

    def get_random_rarity(self, bonus_chance=0.0):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º –±–æ–Ω—É—Å–æ–≤"""
        # –ë–∞–∑–æ–≤—ã–µ —à–∞–Ω—Å—ã
        chances = RARITY_CHANCES.copy()

        # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å –∫ —Ä–µ–¥–∫–∏–º –∫–∞—Ä—Ç–∞–º (4‚òÖ –∏ 5‚òÖ)
        if bonus_chance > 0:
            chances[5] += bonus_chance * 0.3 # 30% –±–æ–Ω—É—Å–∞ –∏–¥–µ—Ç –Ω–∞ 5‚òÖ
            chances[4] += bonus_chance * 0.7 # 70% –±–æ–Ω—É—Å–∞ –∏–¥–µ—Ç –Ω–∞ 4‚òÖ

        # –£–º–µ–Ω—å—à–∞–µ–º —à–∞–Ω—Å—ã –æ–±—ã—á–Ω—ã—Ö –∫–∞—Ä—Ç
        total_bonus = bonus_chance
        chances[1] -= total_bonus * 0.6
        chances[2] -= total_bonus * 0.3
        chances[3] -= total_bonus * 0.1

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–¥–∫–æ—Å—Ç–µ–π —Å –≤–µ—Å–∞–º–∏
        rarity_list = []
        for rarity, chance in chances.items():
            rarity_list.extend([rarity] * int(chance * 100))

        return random.choice(rarity_list)

    def get_random_card(self, rarity):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞–Ω–Ω–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏"""
        cards = self.db.get_cards_by_rarity(rarity)
        if not cards:
            return None
        return random.choice(cards)

    def drop_card_for_user(self, user_id, time_to_drop):
        """–í—ã–ø–∞–¥–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user = self.db.get_user(user_id)
        if not user:
            return None

        # –ü–æ–ª—É—á–∞–µ–º –±–æ–Ω—É—Å–Ω—ã–π —à–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bonus_chance = user[5] # bonus_card_chance

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–¥–∫–æ—Å—Ç—å
        rarity = self.get_random_rarity(bonus_chance)

        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        card = self.get_random_card(rarity)
        if not card:
            return None

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        self.db.add_card_to_user(user_id, card[0]) # card id

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–ø–∞–¥–µ–Ω–∏—è
        self.db.update_last_drop(user_id, time_to_drop)

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –±–æ–Ω—É—Å–Ω—ã–π —à–∞–Ω—Å –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        if bonus_chance > 0:
            self.db.cursor.execute('''
                UPDATE users SET bonus_card_chance = 0.0 WHERE user_id = ?
            ''', (user_id,))
            self.db.conn.commit()

        return card

    def format_card_info(self, card):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ä—Ç–æ—á–∫–µ"""
        if not card:
            return "–ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

        name = card[1]
        rarity = card[2]
        description = card[3]
        health = card[5]
        melee = card[6]
        ranged = card[7]
        devil_fruit = card[8]

        stars = STAR_EMOJI * rarity
        rarity_name = RARITY_NAMES.get(rarity, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è")
        total_power = health + melee + ranged + devil_fruit

        return f"""
üé¥ **{name}** {stars}
üè∑ {rarity_name}
üìù {description}
üìä **–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
‚ù§Ô∏è –ñ–∏–∑–Ω—å: {health}
‚öîÔ∏è –ë–ª–∏–∂–Ω–∏–π –±–æ–π: {melee}
üèπ –î–∞–ª—å–Ω–∏–π –±–æ–π: {ranged}
üçé –î—å—è–≤–æ–ª—å—Å–∫–∏–π –ø–ª–æ–¥: {devil_fruit}
üí™ –û–±—â–∞—è —Å–∏–ª–∞: {total_power}
 """

    def get_user_collection_summary(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        cards = self.db.get_user_cards(user_id)
        stats = self.db.get_user_stats(user_id)

        if not cards:
            return "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Ä—Ç–æ—á–µ–∫! üò¢"

        total_cards = stats[0]
        total_power = stats[1] or 0
        legendary_cards = stats[2] or 0
        epic_cards = stats[3] or 0

        # –ü–æ–¥—Å—á–µ—Ç –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
        rarity_count = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0}
        for card in cards:
            rarity_count[card[2]] += 1

        summary = f"""
üìö **–í–∞—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è:**
üé¥ –í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {total_cards}
üí™ –û–±—â–∞—è —Å–∏–ª–∞: {total_power}
‚≠ê –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏:
{STAR_EMOJI * 5} –ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ: {rarity_count[5]}
{STAR_EMOJI * 4} –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ: {rarity_count[4]}
{STAR_EMOJI * 3} –≠–ø–∏—á–µ—Å–∫–∏–µ: {rarity_count[3]}
{STAR_EMOJI * 2} –†–µ–¥–∫–∏–µ: {rarity_count[2]}
{STAR_EMOJI * 1} –û–±—ã—á–Ω—ã–µ: {rarity_count[1]}
 """

        return summary
